# Generated from SimpleLang.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,91,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,
        1,7,1,8,1,8,1,8,1,9,4,9,50,8,9,11,9,12,9,51,1,10,4,10,55,8,10,11,
        10,12,10,56,1,10,1,10,4,10,61,8,10,11,10,12,10,62,1,11,1,11,5,11,
        67,8,11,10,11,12,11,70,9,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,
        12,1,12,1,12,1,12,3,12,83,8,12,1,13,4,13,86,8,13,11,13,12,13,87,
        1,13,1,13,1,68,0,14,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
        21,11,23,12,25,13,27,14,1,0,2,1,0,48,57,3,0,9,10,13,13,32,32,96,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,1,29,1,0,0,0,3,31,
        1,0,0,0,5,33,1,0,0,0,7,35,1,0,0,0,9,37,1,0,0,0,11,39,1,0,0,0,13,
        41,1,0,0,0,15,43,1,0,0,0,17,45,1,0,0,0,19,49,1,0,0,0,21,54,1,0,0,
        0,23,64,1,0,0,0,25,82,1,0,0,0,27,85,1,0,0,0,29,30,5,40,0,0,30,2,
        1,0,0,0,31,32,5,41,0,0,32,4,1,0,0,0,33,34,5,42,0,0,34,6,1,0,0,0,
        35,36,5,47,0,0,36,8,1,0,0,0,37,38,5,37,0,0,38,10,1,0,0,0,39,40,5,
        94,0,0,40,12,1,0,0,0,41,42,5,43,0,0,42,14,1,0,0,0,43,44,5,45,0,0,
        44,16,1,0,0,0,45,46,5,61,0,0,46,47,5,61,0,0,47,18,1,0,0,0,48,50,
        7,0,0,0,49,48,1,0,0,0,50,51,1,0,0,0,51,49,1,0,0,0,51,52,1,0,0,0,
        52,20,1,0,0,0,53,55,7,0,0,0,54,53,1,0,0,0,55,56,1,0,0,0,56,54,1,
        0,0,0,56,57,1,0,0,0,57,58,1,0,0,0,58,60,5,46,0,0,59,61,7,0,0,0,60,
        59,1,0,0,0,61,62,1,0,0,0,62,60,1,0,0,0,62,63,1,0,0,0,63,22,1,0,0,
        0,64,68,5,34,0,0,65,67,9,0,0,0,66,65,1,0,0,0,67,70,1,0,0,0,68,69,
        1,0,0,0,68,66,1,0,0,0,69,71,1,0,0,0,70,68,1,0,0,0,71,72,5,34,0,0,
        72,24,1,0,0,0,73,74,5,116,0,0,74,75,5,114,0,0,75,76,5,117,0,0,76,
        83,5,101,0,0,77,78,5,102,0,0,78,79,5,97,0,0,79,80,5,108,0,0,80,81,
        5,115,0,0,81,83,5,101,0,0,82,73,1,0,0,0,82,77,1,0,0,0,83,26,1,0,
        0,0,84,86,7,1,0,0,85,84,1,0,0,0,86,87,1,0,0,0,87,85,1,0,0,0,87,88,
        1,0,0,0,88,89,1,0,0,0,89,90,6,13,0,0,90,28,1,0,0,0,7,0,51,56,62,
        68,82,87,1,6,0,0
    ]

class SimpleLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    MUL = 3
    DIV = 4
    MOD = 5
    POW = 6
    ADD = 7
    SUB = 8
    EQ = 9
    INT = 10
    FLOAT = 11
    STRING = 12
    BOOL = 13
    WS = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'*'", "'/'", "'%'", "'^'", "'+'", "'-'", "'=='" ]

    symbolicNames = [ "<INVALID>",
            "MUL", "DIV", "MOD", "POW", "ADD", "SUB", "EQ", "INT", "FLOAT", 
            "STRING", "BOOL", "WS" ]

    ruleNames = [ "T__0", "T__1", "MUL", "DIV", "MOD", "POW", "ADD", "SUB", 
                  "EQ", "INT", "FLOAT", "STRING", "BOOL", "WS" ]

    grammarFileName = "SimpleLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


